#{s0,s1}.out are to check if there's any difference in xx.out linked with different archive files\
that derives from a single .o by `ld -r -o` and multiple .o respectively
#md5sum result: s0.a != s1.a; \
Both of the following can happen:\
s0.out == s1.out!= mab.out \
s0.out == mab.out != s1.out

MAKEFLAGS=-rR
basetarget = $(notdir $@)
ifeq ($(filter -fpic -fPIC,$(CFLAGS)),)
static = 1
suffix=.a
else
static = 0
suffix=.so
endif

VERSION=0.2.0
MAJORVERSION=$(firstword $(subst ., ,$(VERSION)))

objs	= a.o b.o
mobjs	= main.o
stems	= s0 s1
ars		= $(addsuffix .a,$(addprefix lib,$(stems)))#libs0.a libs1.a
#if sos= rather than sos:=,'make[1]: *** No rule to make target 'sharedobjs/libs0.so', needed by 'sharedobjs/s0.out'.  Stop.'\
%.so:%.so.$(VERSION) will not function. REALLY strange!
sos		:= $(ars:.a=.so.$(VERSION))#libs0.so.$(VERSION) libs1.so.$(VERSION)
linksos := $(ars:.a=.so)

aouts	:= $(patsubst %.a,%.out,$(subst lib,,$(ars)))#s0.out s1.out
oouts	= mab.out
c_out	= m.out

CFLAGS_$(c_out) = -L$(OUTPUT)
CFLAGS_REMOVE_$(c_out) = -fpic -fPIC
CFLAGS_REMOVE_$(mobjs) = -fpic -fPIC

OUTPUT	?= staticobjs/

addp	= $(foreach v,$1,$(eval $v := $(addprefix $(OUTPUT),$($v))))
needp	= objs mobjs ars sos aouts oouts c_out linksos
$(call addp, $(needp))
#=======
iter	= $(foreach v,$1,$(warning $v=$($v)))
#$(call iter, $(needp))

$(if $(wildcard $(OUTPUT)),,$(shell mkdir -p $(OUTPUT)))

outs	=$(aouts) $(oouts) $(c_out)
t2o		=$(basename $@)-in.o

cflags1 = $(CFLAGS) -Wall -g $(CFLAGS_$(basetarget))
cflags2 = $(filter-out $(CFLAGS_REMOVE_$(basetarget)),$(cflags1))
cflags = $(cflags2)

build: $(outs)

ifeq (0,1)
#c_out can use the following to append
$(c_out):cflags += -Lstaticobjs#no space needed
$(c_out):cflags += -I.#no space needed
#$(c_out) $(mobjs):cflags = $(filter-out -fpic -fPIC,$(CFLAGS))#Recursive variable 'CFLAGS' references itself (eventually)
endif

$(c_out): main.c $(OUTPUT)libs0$(suffix)
#1.TESTED:if copy libso.a to the same path of main.c, -L. is STILL needed
#2.the following emits error if CFLAGS has no '-L staticobjs/':/usr/bin/ld: cannot find -ls0
	$(CC) $(cflags) $< -l$(patsubst $(OUTPUT)lib%$(suffix),%,$(filter %$(suffix),$^)) -o $@
	
$(oouts):$(mobjs) $(objs)
	$(CC) -o $@ $^;
	@md5sum $@

$(aouts):$(OUTPUT)%.out:$(mobjs) $(OUTPUT)lib%$(suffix)
	$(CC) -o $@ $^$(if $V,$(warning [$*]));
	@md5sum $@

ifeq ($(static),1)
$(word 1,$(ars)):$(objs)
	ld -r -o $(t2o) $^
	ar rcs $@ $(t2o);
	@md5sum $@
$(word 2,$(ars)):$(objs)
	ar rcs $@ $^;
	@md5sum $@
endif
define create-symbols
	ln -sf $(<F) $@
	ln -sf $(<F) $@.$(MAJORVERSION)
endef
%.so: %.so.$(VERSION);
	$(create-symbols)

soname=$(patsubst %.$(VERSION),%.$(MAJORVERSION),$(notdir $@))
$(word 1,$(sos)):$(objs)
	ld -r -o $(t2o) $^
	$(CC) --shared -Wl,-soname,$(soname) $(t2o) -o $@
	@md5sum $@
#	$(create-sym)
$(word 2,$(sos)):$(objs)
	$(CC) --shared -Wl,-soname,$(soname) $^ -o $@
	@md5sum $@
	$(CC) -shared $^ -o $@~
#	$(call create-sym, dummy)

$(OUTPUT)%.o: %.c
	$(CC) $(cflags) -c -o $@ $<
